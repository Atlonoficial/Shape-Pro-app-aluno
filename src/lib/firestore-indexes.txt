/**
 * Índices Compostos - Firebase Firestore (Definitivos)
 * 
 * COMO CONFIGURAR:
 * 1. Firebase Console → Firestore → Indexes → Add index
 * 2. Crie cada índice exatamente como listado abaixo
 * 3. Alternativamente, use Firebase CLI (ver bloco ao final)
 * 
 * CONEXÃO PROFESSOR-ALUNO:
 * - Mesmos índices para app do Professor (dashboard) e do Aluno
 * - Queries otimizadas para tempo real e ordenações por updated_at
 */

// 1) STUDENTS por TEACHER
Collection: students
Fields:
  - teacher_id (Ascending)
  - created_at (Descending)
Query scope: Collection

// 2) TRAINING_PLANS por TEACHER
Collection: training_plans
Fields:
  - teacher_id (Ascending)
  - updated_at (Descending)
Query scope: Collection

// 3) TRAINING_PLANS por STUDENT
Collection: training_plans
Fields:
  - student_id (Ascending)
  - updated_at (Descending)
Query scope: Collection

// 4) DIET_PLANS por STUDENT (para dashboard)
Collection: diet_plans
Fields:
  - student_id (Ascending)
  - updated_at (Descending)
Query scope: Collection

// 4.a) (Opcional para este app) NUTRITION por STUDENT
// Caso seu app use a coleção 'nutrition' ao invés de 'diet_plans'
Collection: nutrition
Fields:
  - student_id (Ascending)
  - updated_at (Descending)
Query scope: Collection

// 5) APPOINTMENTS por TEACHER (com status)
Collection: appointments
Fields:
  - teacher_id (Ascending)
  - status (Ascending)
  - scheduled_at (Descending)
Query scope: Collection

// 6) APPOINTMENTS por STUDENT
Collection: appointments
Fields:
  - student_id (Ascending)
  - scheduled_at (Descending)
Query scope: Collection

// 7) PAYMENTS por TEACHER
Collection: payments
Fields:
  - teacher_id (Ascending)
  - created_at (Descending)
Query scope: Collection

// 8) PAYMENTS por STUDENT
Collection: payments
Fields:
  - student_id (Ascending)
  - created_at (Descending)
Query scope: Collection

// 9) NOTIFICATIONS por TEACHER
Collection: notifications
Fields:
  - teacher_id (Ascending)
  - created_at (Descending)
Query scope: Collection

// 10) NOTIFICATIONS por STUDENT
Collection: notifications
Fields:
  - student_id (Ascending)
  - created_at (Descending)
Query scope: Collection

// 11) MESSAGES por CONVERSATION (ordem cronológica)
Collection: messages
Fields:
  - conversation_id (Ascending)
  - created_at (Ascending)
Query scope: Collection

// 12) (Extras do App) WORKOUT_SESSIONS por STUDENT
Collection: workout_sessions
Fields:
  - student_id (Ascending)
  - created_at (Descending)
Query scope: Collection

// 13) (Extras do App) PROGRESS por STUDENT
Collection: progress
Fields:
  - student_id (Ascending)
  - date (Descending)
Query scope: Collection

// 14) (Extras do App) FCM_TOKENS por USER
Collection: fcm_tokens
Fields:
  - userId (Ascending)
  - created_at (Descending)
Query scope: Collection

// 15) BANNERS por TEACHER (somente ativos, ordenados por atualização)
Collection: banners
Fields:
  - teacher_id (Ascending)
  - status (Ascending)
  - updated_at (Descending)
Query scope: Collection

/**
 * CLI (Opcional):
 * firebase firestore:indexes
 * 
 * Ou crie um arquivo firestore.indexes.json e rode:
 * firebase deploy --only firestore:indexes
 */